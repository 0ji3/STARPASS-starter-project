/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Sns, SnsInterface } from "../../SnsExample.sol/Sns";
import type { PromiseOrValue } from "../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "getAllPosts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLikes",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "likes",
            type: "address[]",
          },
        ],
        internalType: "struct Sns.Post[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastPostId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "getPost",
    outputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalLikes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "posts",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLikes",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "unlike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f15806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806374d21ae01161005b57806374d21ae0146100e65780638ee93cf3146100fb578063d5ccb9091461010e578063e82935da1461012457600080fd5b80630b1e7f831461008257806330561100146100af57806340731c24146100c4575b600080fd5b610095610090366004610a9b565b610137565b6040516100a6959493929190610afa565b60405180910390f35b6100b761020e565b6040516100a69190610b3a565b6100d76100d2366004610a9b565b61038f565b6040516100a693929190610c26565b6100f96100f4366004610a9b565b6103c8565b005b6100f9610109366004610c61565b6103d4565b61011661054f565b6040519081526020016100a6565b6100f9610132366004610a9b565b610588565b6000818154811061014757600080fd5b906000526020600020906006020160009150905080600001549080600101549080600201549080600301805461017c90610d12565b80601f01602080910402602001604051908101604052809291908181526020018280546101a890610d12565b80156101f55780601f106101ca576101008083540402835291602001916101f5565b820191906000526020600020905b8154815290600101906020018083116101d857829003601f168201915b505050600490930154919250506001600160a01b031685565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561038657838290600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201805461028390610d12565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90610d12565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050918352505060048201546001600160a01b0316602080830191909152600583018054604080518285028101850182528281529401939283018282801561036e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610350575b50505050508152505081526020019060010190610232565b50505050905090565b606060008061039d846107e9565b606001516103aa856107e9565b604001516103b7866107e9565b602001519250925092509193909250565b6103d181610588565b50565b6104166040518060c001604052806000815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001606081525090565b600154815233608082015260608101828152426020830190815260008054600181018255908052835160069091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810191825591517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56483015560408401517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56583015591518392917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56601906104eb9082610d9a565b50608082015160048201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905560a0820151805161053a916005840191602090910190610a14565b50505061054b600180546001019055565b5050565b60008054819061056190600190610e70565b8154811061057157610571610e83565b906000526020600020906006020160000154905090565b6000805b6000548110156107e45782600082815481106105aa576105aa610e83565b906000526020600020906006020160000154036107d25760008082815481106105d5576105d5610e83565b9060005260206000209060060201600501905060005b815481101561073a57336001600160a01b031682828154811061061057610610610e83565b6000918252602090912001546001600160a01b031603610728578154829061063a90600190610e70565b8154811061064a5761064a610e83565b9060005260206000200160009054906101000a90046001600160a01b031682828154811061067a5761067a610e83565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818054806106b8576106b8610e99565b6000828152602081208201600019908101805473ffffffffffffffffffffffffffffffffffffffff191690559091019091558054849081106106fc576106fc610e83565b60009182526020822060026006909202010180549161071a83610eaf565b91905055506001935061073a565b8061073281610ec6565b9150506105eb565b50826107d0576000828154811061075357610753610e83565b60009182526020808320600560069093020191909101805460018101825590835290822001805473ffffffffffffffffffffffffffffffffffffffff1916331790558054839081106107a7576107a7610e83565b6000918252602082206002600690920201018054916107c583610ec6565b919050555050505050565b505b806107dc81610ec6565b91505061058c565b505050565b61082b6040518060c001604052806000815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001606081525090565b60005b6000548110156109cb57826000828154811061084c5761084c610e83565b906000526020600020906006020160000154036109b9576000818154811061087657610876610e83565b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820180546108bd90610d12565b80601f01602080910402602001604051908101604052809291908181526020018280546108e990610d12565b80156109365780601f1061090b57610100808354040283529160200191610936565b820191906000526020600020905b81548152906001019060200180831161091957829003601f168201915b505050918352505060048201546001600160a01b031660208083019190915260058301805460408051828502810185018252828152940193928301828280156109a857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161098a575b505050505081525050915050919050565b806109c381610ec6565b91505061082e565b50610a0e6040518060c001604052806000815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001606081525090565b92915050565b828054828255906000526020600020908101928215610a76579160200282015b82811115610a76578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178255602090920191600190910190610a34565b50610a82929150610a86565b5090565b5b80821115610a825760008155600101610a87565b600060208284031215610aad57600080fd5b5035919050565b6000815180845260005b81811015610ada57602081850181015186830182015201610abe565b506000602082860101526020601f19601f83011685010191505092915050565b85815284602082015283604082015260a060608201526000610b1f60a0830185610ab4565b90506001600160a01b03831660808301529695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610c1757603f198a8503018652825160c081518652898201518a87015288820151898701526060808301518282890152610ba283890182610ab4565b6080858101516001600160a01b03908116918b019190915260a0958601518a8303968b01969096528551808352958e0195889550918e0193509091505b81841015610c0157845181168352938c019360019390930192918c0191610bdf565b5050978a01979550505091870191600101610b62565b50919998505050505050505050565b606081526000610c396060830186610ab4565b60208301949094525060400152919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610c7357600080fd5b813567ffffffffffffffff80821115610c8b57600080fd5b818401915084601f830112610c9f57600080fd5b813581811115610cb157610cb1610c4b565b604051601f8201601f19908116603f01168101908382118183101715610cd957610cd9610c4b565b81604052828152876020848701011115610cf257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c90821680610d2657607f821691505b602082108103610d4657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107e457600081815260208120601f850160051c81016020861015610d735750805b601f850160051c820191505b81811015610d9257828155600101610d7f565b505050505050565b815167ffffffffffffffff811115610db457610db4610c4b565b610dc881610dc28454610d12565b84610d4c565b602080601f831160018114610dfd5760008415610de55750858301515b600019600386901b1c1916600185901b178555610d92565b600085815260208120601f198616915b82811015610e2c57888601518255948401946001909101908401610e0d565b5085821015610e4a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a0e57610a0e610e5a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600081610ebe57610ebe610e5a565b506000190190565b600060018201610ed857610ed8610e5a565b506001019056fea2646970667358221220b33909401e520e74525131e3e097185130a7431ab997742a65727c65f8b03c7864736f6c63430008110033";

type SnsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sns__factory extends ContractFactory {
  constructor(...args: SnsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sns> {
    return super.deploy(overrides || {}) as Promise<Sns>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Sns {
    return super.attach(address) as Sns;
  }
  override connect(signer: Signer): Sns__factory {
    return super.connect(signer) as Sns__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnsInterface {
    return new utils.Interface(_abi) as SnsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sns {
    return new Contract(address, _abi, signerOrProvider) as Sns;
  }
}
