/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Government, GovernmentInterface } from "../Government";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "abstain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "determinePresident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPresident",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifyAddress",
        type: "address",
      },
    ],
    name: "isCandidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_candidateAddress",
        type: "address",
      },
    ],
    name: "numberOfVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runForCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_candidateAddress",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061024e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80635e98e4c71161005b5780635e98e4c7146101155780636dd7d8ea14610139578063a800736314610169578063d51b9e931461018a57600080fd5b8062738d221461008157806305be049a146100ae578063231ae100146100d4575b600080fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d26000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b005b6100d26000546002805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6100d26001805473ffffffffffffffffffffffffffffffffffffffff191633179055565b6100d26101473660046101db565b506001805473ffffffffffffffffffffffffffffffffffffffff191633179055565b61017c6101773660046101db565b6101a8565b6040519081526020016100a5565b6101986101773660046101db565b60405190151581526020016100a5565b6000805473ffffffffffffffffffffffffffffffffffffffff8084169116036101d357506001919050565b506000919050565b6000602082840312156101ed57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461021157600080fd5b939250505056fea2646970667358221220f74315ba67cb228350c1bf2c989e781cd4f61138ef38f700cae9ddd09eeffdbd64736f6c63430008110033";

type GovernmentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernmentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Government__factory extends ContractFactory {
  constructor(...args: GovernmentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Government> {
    return super.deploy(overrides || {}) as Promise<Government>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Government {
    return super.attach(address) as Government;
  }
  override connect(signer: Signer): Government__factory {
    return super.connect(signer) as Government__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernmentInterface {
    return new utils.Interface(_abi) as GovernmentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Government {
    return new Contract(address, _abi, signerOrProvider) as Government;
  }
}
