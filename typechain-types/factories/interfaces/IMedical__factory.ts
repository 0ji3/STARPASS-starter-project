/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { IMedical, IMedicalInterface } from "../../interfaces/IMedical";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_patientAddress",
        type: "address",
      },
    ],
    name: "getMedicalData",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "bloodType",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedtime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_patientAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_medicalProviderAddress",
        type: "address",
      },
    ],
    name: "isViewingAccessGranted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_medicalProviderAddress",
        type: "address",
      },
    ],
    name: "provideViewingAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_bloodType",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_bloodType",
        type: "string",
      },
    ],
    name: "updateBloodType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "updateName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IMedical__factory {
  static readonly abi = _abi;
  static createInterface(): IMedicalInterface {
    return new utils.Interface(_abi) as IMedicalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMedical {
    return new Contract(address, _abi, signerOrProvider) as IMedical;
  }
}
